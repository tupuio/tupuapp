// Generated by Xata Codegen 0.26.9. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "users",
    columns: [
      { name: "email", type: "email", unique: true },
      { name: "externalId", type: "string" },
      { name: "roles", type: "multiple" },
      {
        name: "provider",
        type: "string",
        notNull: true,
        defaultValue: "email",
      },
      { name: "published", type: "bool", notNull: true, defaultValue: "false" },
    ],
    revLinks: [
      { column: "user", table: "mentors" },
      { column: "user", table: "profiles" },
    ],
  },
  {
    name: "tokens",
    columns: [
      { name: "value", type: "string", unique: true },
      {
        name: "expiresAt",
        type: "datetime",
        notNull: true,
        defaultValue: "now",
      },
      { name: "identifier", type: "string" },
    ],
  },
  {
    name: "profiles",
    columns: [
      { name: "user", type: "link", link: { table: "users" }, unique: true },
      { name: "title", type: "string" },
      { name: "company", type: "string" },
      { name: "seniority", type: "string" },
      { name: "languages", type: "multiple" },
      {
        name: "timezone",
        type: "string",
        notNull: true,
        defaultValue: "Europe/London",
      },
      { name: "picture", type: "string" },
      { name: "biography", type: "text" },
      { name: "name", type: "string" },
    ],
    revLinks: [{ column: "profile", table: "social_links" }],
  },
  {
    name: "social_links",
    columns: [
      { name: "profile", type: "link", link: { table: "profiles" } },
      {
        name: "platform",
        type: "string",
        notNull: true,
        defaultValue: "linkedin",
      },
      {
        name: "url",
        type: "string",
        notNull: true,
        defaultValue: "https://linkedin.com",
      },
    ],
  },
  {
    name: "mentors",
    columns: [
      { name: "user", type: "link", link: { table: "users" }, unique: true },
      {
        name: "status",
        type: "string",
        notNull: true,
        defaultValue: "unavailable",
      },
      { name: "calendlyUrl", type: "string" },
    ],
  },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL: "https://tupu-4vhf0k.eu-west-1.xata.sh/db/tupu-app",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
