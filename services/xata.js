// Generated by Xata Codegen 0.18.0. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "users",
    columns: [
      { name: "name", type: "string" },
      { name: "email", type: "email" },
      { name: "title", type: "string" },
      { name: "twitter", type: "string" },
      { name: "linkedin", type: "string" },
      { name: "biography", type: "text" },
      { name: "picture", type: "string" },
      { name: "roles", type: "multiple" },
      {
        name: "mentor",
        type: "object",
        columns: [
          { name: "status", type: "string" },
          { name: "hide", type: "bool" },
          { name: "incognito", type: "bool" },
          { name: "longterm", type: "bool" },
          { name: "shortterm", type: "bool" },
          { name: "calendly", type: "string" },
          { name: "notifications", type: "bool" },
          { name: "other_knowledge", type: "string" },
        ],
      },
      { name: "skills", type: "multiple" },
      { name: "company", type: "string" },
      { name: "seniority", type: "string" },
      { name: "languages", type: "string" },
      { name: "timezone", type: "string" },
    ],
  },
  {
    name: "requests",
    columns: [
      { name: "mentor", type: "link", link: { table: "users" } },
      { name: "mentee", type: "link", link: { table: "users" } },
      { name: "message", type: "text" },
      { name: "status", type: "string" },
      { name: "lastUpdateDate", type: "string" },
      { name: "longterm", type: "bool", notNull: true, defaultValue: "true" },
      { name: "creationDate", type: "datetime" },
    ],
  },
  {
    name: "nextauth_providers",
    columns: [
      { name: "user", type: "link", link: { table: "users" } },
      { name: "provider", type: "string" },
      { name: "providerAccountId", type: "string" },
    ],
  },
  {
    name: "relationships",
    columns: [
      { name: "mentor", type: "link", link: { table: "users" } },
      { name: "mentee", type: "link", link: { table: "users" } },
      { name: "status", type: "string" },
      { name: "startDate", type: "string" },
      { name: "goals", type: "string" },
      { name: "notes", type: "string" },
      { name: "message", type: "string" },
      { name: "endDate", type: "string" },
      { name: "longterm", type: "bool", notNull: true, defaultValue: "false" },
    ],
  },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL: "https://tupu-4vhf0k.eu-west-1.xata.sh/db/tupu-app",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
